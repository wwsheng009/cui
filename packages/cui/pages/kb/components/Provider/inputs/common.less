// Common styles for input components with error states

// Error state styles
.error {
	border-color: var(--color_danger, #e62965) !important;

	&:focus,
	&:focus-visible {
		border-color: var(--color_danger, #e62965) !important;
		box-shadow: 0 0 0 2px rgba(230, 41, 101, 0.1) !important;
	}

	&:hover:not(:disabled):not([readonly]) {
		border-color: var(--color_danger, #e62965) !important;
	}
}

// Error message display
.errorMessage {
	display: block !important;
	font-size: 12px !important;
	color: var(--color_danger, #e62965) !important;
	margin-top: 4px !important;
	line-height: 1.4 !important;
	padding: 4px 8px !important;
	background: var(--color_danger_bg, #fff1f0) !important;
	border-radius: 4px !important;
	border: 1px solid transparent !important;

	// Dark mode support
	[data-theme='dark'] & {
		background: rgba(230, 41, 101, 0.15) !important;
		color: #ff6b8a !important;
	}
}

// Container for input + error message
.inputContainer {
	display: flex !important;
	flex-direction: column !important;
	width: 100% !important;
}

// Base input styles that can be extended
.baseInput {
	width: 100% !important;
	padding: 8px 12px !important;
	border: 1px solid var(--color_border) !important;
	border-radius: var(--radius) !important;
	background: var(--color_bg_menu) !important;
	color: var(--color_text) !important;
	font-size: 13px !important;
	line-height: 1.5 !important;
	transition: all 0.2s ease !important;
	box-sizing: border-box !important;

	&::placeholder {
		color: var(--color_placeholder, #727272) !important;
	}

	&:hover:not(:disabled):not([readonly]) {
		border-color: var(--color_main_hover, #4580ff) !important;
		background-color: var(--color_bg_hover, #f5f5f5) !important;
	}

	&:focus,
	&:focus-visible {
		outline: none !important;
		border-color: var(--color_main, #3371fc) !important;
		box-shadow: 0 0 0 2px rgba(51, 113, 252, 0.1) !important;
	}

	&:disabled {
		background: var(--color_bg) !important;
		border-color: var(--color_border_light) !important;
		color: var(--color_text_grey) !important;
		cursor: not-allowed !important;
		opacity: 0.6 !important;
	}

	&[readonly] {
		background: var(--color_bg) !important;
		border-color: var(--color_border_light) !important;
		cursor: default !important;
	}
}

// Error state for base input
.baseInput.error {
	.error();
}
